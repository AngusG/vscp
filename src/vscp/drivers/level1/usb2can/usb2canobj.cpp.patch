Index: usb2canobj.cpp
===================================================================
--- usb2canobj.cpp	(revision 3328)
+++ usb2canobj.cpp	(revision 3342)
@@ -219,7 +219,7 @@
 			  m_serial[y] = 0;
 		  }
 
-		  strupr(m_serial);
+		  _strupr(m_serial);
 
 		  if( strlen (m_serial) != 8 )
             return false;
@@ -475,7 +475,10 @@
 
 	// set USB2CAN baudrate
     if( USB2CAN_open( nSpeed,m_tseg1,m_tseg2,m_sjw,m_brp,m_initFlag ) == FALSE )
-	  close();
+	{
+		close();
+		return false;
+	}
 
     m_bOpen = true;
 
@@ -976,9 +979,13 @@
 	   LOCK_MUTEX( m_receiveMutex );
 
 	   dll_removeNode( &m_receiveList, m_receiveList.pHead );
+	   if(m_receiveList.nCount == 0)
+	   {
+		   ResetEvent( m_receiveDataEvent);		
+	   }
        UNLOCK_MUTEX( m_receiveMutex );
 
-	   ResetEvent( m_receiveDataEvent);		
+	   
 
        rv = CANAL_ERROR_SUCCESS;	
 
@@ -1018,7 +1025,10 @@
        LOCK_MUTEX( m_receiveMutex );
        memcpy( pMsg, m_receiveList.pHead->pObject, sizeof( canalMsg ) );	   
 	   dll_removeNode( &m_receiveList, m_receiveList.pHead );
-	   ResetEvent( m_receiveDataEvent);
+	   if(m_receiveList.nCount == 0)
+	   {
+			ResetEvent( m_receiveDataEvent);
+	   }
        UNLOCK_MUTEX( m_receiveMutex );	   	
 	  }
 	  else
@@ -1453,18 +1463,16 @@
 				   {
 					 LOCK_MUTEX( pobj->m_receiveMutex );
 					 dll_addNode( &pobj->m_receiveList, pNode );
+					 SetEvent( pobj->m_receiveDataEvent ); // Signal frame in queue
 					 UNLOCK_MUTEX( pobj->m_receiveMutex );
 
-					 SetEvent( pobj->m_receiveDataEvent ); // Signal frame in queue
-
 				   }
 				   else if( (pobj->m_initFlag & 8) && (pobj->m_receiveList.nCount < USB2CAN_MAX_FIFO) )
 				   {
 					  LOCK_MUTEX( pobj->m_receiveMutex );
 					  dll_addNode( &pobj->m_receiveList, pNode );
+					  SetEvent( pobj->m_receiveDataEvent ); // Signal frame in queue
 					  UNLOCK_MUTEX( pobj->m_receiveMutex );
-
-					  SetEvent( pobj->m_receiveDataEvent ); // Signal frame in queue
 				   }
 				   else 
 				   {
