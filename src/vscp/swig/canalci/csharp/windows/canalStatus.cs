/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 1.3.24
 *
 * Do not make changes to this file unless you know what you are doing--modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */


using System;

public class canalStatus : IDisposable {
  private IntPtr swigCPtr;
  protected bool swigCMemOwn;

  internal canalStatus(IntPtr cPtr, bool cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  internal static IntPtr getCPtr(canalStatus obj) {
    return (obj == null) ? IntPtr.Zero : obj.swigCPtr;
  }

  ~canalStatus() {
    Dispose();
  }

  public virtual void Dispose() {
    if(swigCPtr != IntPtr.Zero && swigCMemOwn) {
      swigCMemOwn = false;
      cscanalciPINVOKE.delete_canalStatus(swigCPtr);
    }
    swigCPtr = IntPtr.Zero;
    GC.SuppressFinalize(this);
  }

  public SWIGTYPE_p__u32 channel_status {
    set {
      cscanalciPINVOKE.set_canalStatus_channel_status(swigCPtr, SWIGTYPE_p__u32.getCPtr(value));
    } 
    get {
      return new SWIGTYPE_p__u32(cscanalciPINVOKE.get_canalStatus_channel_status(swigCPtr), true);
    } 
  }

  public canalStatus() : this(cscanalciPINVOKE.new_canalStatus(), true) {
  }

}
